#include <%abinding/Binding.h>


using namespace %a;

namespace %abinding 
{

const Binding::array_t & Binding::functions()
{
    return s_functions;
}

ContextHandle & Binding::context()
{
    static THREAD_LOCAL ContextHandle t_context = 0;

    return t_context;
}

int & Binding::pos()
{
    static THREAD_LOCAL int t_pos = -1;

    return t_pos;
}

std::recursive_mutex & Binding::mutex()
{
    static std::recursive_mutex g_mutex;

    return g_mutex;
}

std::unordered_map<ContextHandle, int> & Binding::bindings()
{
    static std::unordered_map<ContextHandle, int> g_bindings;

    return g_bindings;
}

%s

const Binding::array_t Binding::s_functions = 
{{
    %s
}};

} // namespace %abinding
