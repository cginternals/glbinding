
#include "Meta_Maps.h"

#include <eglbinding/egl/typeintegrations.h>
#include <eglbinding/egl/extension.h>


using namespace egl;

namespace eglbinding
{

const std::unordered_map<std::string, EGLextension> Meta_ExtensionsByString
{
// NOTE: this is intended to work irrespective of a SYMBOLS_BY_STRINGS definition.
    { "EGL_ANDROID_blob_cache", EGLextension::EGL_ANDROID_blob_cache },
    { "EGL_ANDROID_framebuffer_target", EGLextension::EGL_ANDROID_framebuffer_target },
    { "EGL_ANDROID_image_native_buffer", EGLextension::EGL_ANDROID_image_native_buffer },
    { "EGL_ANDROID_native_fence_sync", EGLextension::EGL_ANDROID_native_fence_sync },
    { "EGL_ANDROID_recordable", EGLextension::EGL_ANDROID_recordable },
    { "EGL_ANGLE_d3d_share_handle_client_buffer", EGLextension::EGL_ANGLE_d3d_share_handle_client_buffer },
    { "EGL_ANGLE_device_d3d", EGLextension::EGL_ANGLE_device_d3d },
    { "EGL_ANGLE_query_surface_pointer", EGLextension::EGL_ANGLE_query_surface_pointer },
    { "EGL_ANGLE_surface_d3d_texture_2d_share_handle", EGLextension::EGL_ANGLE_surface_d3d_texture_2d_share_handle },
    { "EGL_ANGLE_window_fixed_size", EGLextension::EGL_ANGLE_window_fixed_size },
    { "EGL_ARM_pixmap_multisample_discard", EGLextension::EGL_ARM_pixmap_multisample_discard },
    { "EGL_EXT_buffer_age", EGLextension::EGL_EXT_buffer_age },
    { "EGL_EXT_client_extensions", EGLextension::EGL_EXT_client_extensions },
    { "EGL_EXT_create_context_robustness", EGLextension::EGL_EXT_create_context_robustness },
    { "EGL_EXT_device_base", EGLextension::EGL_EXT_device_base },
    { "EGL_EXT_device_drm", EGLextension::EGL_EXT_device_drm },
    { "EGL_EXT_device_enumeration", EGLextension::EGL_EXT_device_enumeration },
    { "EGL_EXT_device_openwf", EGLextension::EGL_EXT_device_openwf },
    { "EGL_EXT_device_query", EGLextension::EGL_EXT_device_query },
    { "EGL_EXT_image_dma_buf_import", EGLextension::EGL_EXT_image_dma_buf_import },
    { "EGL_EXT_multiview_window", EGLextension::EGL_EXT_multiview_window },
    { "EGL_EXT_output_base", EGLextension::EGL_EXT_output_base },
    { "EGL_EXT_output_drm", EGLextension::EGL_EXT_output_drm },
    { "EGL_EXT_output_openwf", EGLextension::EGL_EXT_output_openwf },
    { "EGL_EXT_platform_base", EGLextension::EGL_EXT_platform_base },
    { "EGL_EXT_platform_device", EGLextension::EGL_EXT_platform_device },
    { "EGL_EXT_platform_wayland", EGLextension::EGL_EXT_platform_wayland },
    { "EGL_EXT_platform_x11", EGLextension::EGL_EXT_platform_x11 },
    { "EGL_EXT_protected_surface", EGLextension::EGL_EXT_protected_surface },
    { "EGL_EXT_stream_consumer_egloutput", EGLextension::EGL_EXT_stream_consumer_egloutput },
    { "EGL_EXT_swap_buffers_with_damage", EGLextension::EGL_EXT_swap_buffers_with_damage },
    { "EGL_EXT_yuv_surface", EGLextension::EGL_EXT_yuv_surface },
    { "EGL_HI_clientpixmap", EGLextension::EGL_HI_clientpixmap },
    { "EGL_HI_colorformats", EGLextension::EGL_HI_colorformats },
    { "EGL_IMG_context_priority", EGLextension::EGL_IMG_context_priority },
    { "EGL_KHR_cl_event", EGLextension::EGL_KHR_cl_event },
    { "EGL_KHR_cl_event2", EGLextension::EGL_KHR_cl_event2 },
    { "EGL_KHR_client_get_all_proc_addresses", EGLextension::EGL_KHR_client_get_all_proc_addresses },
    { "EGL_KHR_config_attribs", EGLextension::EGL_KHR_config_attribs },
    { "EGL_KHR_create_context", EGLextension::EGL_KHR_create_context },
    { "EGL_KHR_create_context_no_error", EGLextension::EGL_KHR_create_context_no_error },
    { "EGL_KHR_fence_sync", EGLextension::EGL_KHR_fence_sync },
    { "EGL_KHR_get_all_proc_addresses", EGLextension::EGL_KHR_get_all_proc_addresses },
    { "EGL_KHR_gl_colorspace", EGLextension::EGL_KHR_gl_colorspace },
    { "EGL_KHR_gl_renderbuffer_image", EGLextension::EGL_KHR_gl_renderbuffer_image },
    { "EGL_KHR_gl_texture_2D_image", EGLextension::EGL_KHR_gl_texture_2D_image },
    { "EGL_KHR_gl_texture_3D_image", EGLextension::EGL_KHR_gl_texture_3D_image },
    { "EGL_KHR_gl_texture_cubemap_image", EGLextension::EGL_KHR_gl_texture_cubemap_image },
    { "EGL_KHR_image", EGLextension::EGL_KHR_image },
    { "EGL_KHR_image_base", EGLextension::EGL_KHR_image_base },
    { "EGL_KHR_image_pixmap", EGLextension::EGL_KHR_image_pixmap },
    { "EGL_KHR_lock_surface", EGLextension::EGL_KHR_lock_surface },
    { "EGL_KHR_lock_surface2", EGLextension::EGL_KHR_lock_surface2 },
    { "EGL_KHR_lock_surface3", EGLextension::EGL_KHR_lock_surface3 },
    { "EGL_KHR_partial_update", EGLextension::EGL_KHR_partial_update },
    { "EGL_KHR_platform_android", EGLextension::EGL_KHR_platform_android },
    { "EGL_KHR_platform_gbm", EGLextension::EGL_KHR_platform_gbm },
    { "EGL_KHR_platform_wayland", EGLextension::EGL_KHR_platform_wayland },
    { "EGL_KHR_platform_x11", EGLextension::EGL_KHR_platform_x11 },
    { "EGL_KHR_reusable_sync", EGLextension::EGL_KHR_reusable_sync },
    { "EGL_KHR_stream", EGLextension::EGL_KHR_stream },
    { "EGL_KHR_stream_consumer_gltexture", EGLextension::EGL_KHR_stream_consumer_gltexture },
    { "EGL_KHR_stream_cross_process_fd", EGLextension::EGL_KHR_stream_cross_process_fd },
    { "EGL_KHR_stream_fifo", EGLextension::EGL_KHR_stream_fifo },
    { "EGL_KHR_stream_producer_aldatalocator", EGLextension::EGL_KHR_stream_producer_aldatalocator },
    { "EGL_KHR_stream_producer_eglsurface", EGLextension::EGL_KHR_stream_producer_eglsurface },
    { "EGL_KHR_surfaceless_context", EGLextension::EGL_KHR_surfaceless_context },
    { "EGL_KHR_swap_buffers_with_damage", EGLextension::EGL_KHR_swap_buffers_with_damage },
    { "EGL_KHR_vg_parent_image", EGLextension::EGL_KHR_vg_parent_image },
    { "EGL_KHR_wait_sync", EGLextension::EGL_KHR_wait_sync },
    { "EGL_MESA_drm_image", EGLextension::EGL_MESA_drm_image },
    { "EGL_MESA_image_dma_buf_export", EGLextension::EGL_MESA_image_dma_buf_export },
    { "EGL_MESA_platform_gbm", EGLextension::EGL_MESA_platform_gbm },
    { "EGL_NOK_swap_region", EGLextension::EGL_NOK_swap_region },
    { "EGL_NOK_swap_region2", EGLextension::EGL_NOK_swap_region2 },
    { "EGL_NOK_texture_from_pixmap", EGLextension::EGL_NOK_texture_from_pixmap },
    { "EGL_NV_3dvision_surface", EGLextension::EGL_NV_3dvision_surface },
    { "EGL_NV_coverage_sample", EGLextension::EGL_NV_coverage_sample },
    { "EGL_NV_coverage_sample_resolve", EGLextension::EGL_NV_coverage_sample_resolve },
    { "EGL_NV_cuda_event", EGLextension::EGL_NV_cuda_event },
    { "EGL_NV_depth_nonlinear", EGLextension::EGL_NV_depth_nonlinear },
    { "EGL_NV_device_cuda", EGLextension::EGL_NV_device_cuda },
    { "EGL_NV_native_query", EGLextension::EGL_NV_native_query },
    { "EGL_NV_post_convert_rounding", EGLextension::EGL_NV_post_convert_rounding },
    { "EGL_NV_post_sub_buffer", EGLextension::EGL_NV_post_sub_buffer },
    { "EGL_NV_stream_sync", EGLextension::EGL_NV_stream_sync },
    { "EGL_NV_sync", EGLextension::EGL_NV_sync },
    { "EGL_NV_system_time", EGLextension::EGL_NV_system_time },
    { "EGL_TIZEN_image_native_buffer", EGLextension::EGL_TIZEN_image_native_buffer },
    { "EGL_TIZEN_image_native_surface", EGLextension::EGL_TIZEN_image_native_surface }
};

} // namespace eglbinding
