#pragma once

#include <glpbinding/glpbinding_api.h>

#include <glpbinding/noglp.h>
#include <glpbinding/glp/types.h>


namespace glp
{

GLPBINDING_API void glActiveShaderProgram(GLuint pipeline, GLuint program);
GLPBINDING_API void glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
GLPBINDING_API void glActiveTexture(GLenum texture);
GLPBINDING_API void glAlphaFuncQCOM(GLenum func, GLclampf ref);
GLPBINDING_API void glApplyFramebufferAttachmentCMAAINTEL();
GLPBINDING_API void glAttachShader(GLuint program, GLuint shader);
GLPBINDING_API void glBeginConditionalRenderNV(GLuint id, GLenum mode);
GLPBINDING_API void glBeginPerfMonitorAMD(GLuint monitor);
GLPBINDING_API void glBeginPerfQueryINTEL(GLuint queryHandle);
GLPBINDING_API void glBeginQuery(GLenum target, GLuint id);
GLPBINDING_API void glBeginQueryEXT(GLenum target, GLuint id);
GLPBINDING_API void glBeginTransformFeedback(GLenum primitiveMode);
GLPBINDING_API void glBindAttribLocation(GLuint program, GLuint index, const GLchar * name);
GLPBINDING_API void glBindBuffer(GLenum target, GLuint buffer);
GLPBINDING_API void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
GLPBINDING_API void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLPBINDING_API void glBindFramebuffer(GLenum target, GLuint framebuffer);
GLPBINDING_API void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLPBINDING_API void glBindProgramPipeline(GLuint pipeline);
GLPBINDING_API void glBindProgramPipelineEXT(GLuint pipeline);
GLPBINDING_API void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
GLPBINDING_API void glBindSampler(GLuint unit, GLuint sampler);
GLPBINDING_API void glBindTexture(GLenum target, GLuint texture);
GLPBINDING_API void glBindTransformFeedback(GLenum target, GLuint id);
GLPBINDING_API void glBindVertexArray(GLuint array);
GLPBINDING_API void glBindVertexArrayOES(GLuint array);
GLPBINDING_API void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLPBINDING_API void glBlendBarrier();
GLPBINDING_API void glBlendBarrierKHR();
GLPBINDING_API void glBlendBarrierNV();
GLPBINDING_API void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLPBINDING_API void glBlendEquation(GLenum mode);
GLPBINDING_API void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
GLPBINDING_API void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLPBINDING_API void glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLPBINDING_API void glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLPBINDING_API void glBlendEquationi(GLuint buf, GLenum mode);
GLPBINDING_API void glBlendEquationiEXT(GLuint buf, GLenum mode);
GLPBINDING_API void glBlendEquationiOES(GLuint buf, GLenum mode);
GLPBINDING_API void glBlendFunc(GLenum sfactor, GLenum dfactor);
GLPBINDING_API void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLPBINDING_API void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLPBINDING_API void glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLPBINDING_API void glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLPBINDING_API void glBlendFunci(GLuint buf, GLenum src, GLenum dst);
GLPBINDING_API void glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
GLPBINDING_API void glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
GLPBINDING_API void glBlendParameteriNV(GLenum pname, GLint value);
GLPBINDING_API void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLPBINDING_API void glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLPBINDING_API void glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLPBINDING_API void glBufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
GLPBINDING_API void glBufferStorageEXT(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
GLPBINDING_API void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
GLPBINDING_API GLenum glCheckFramebufferStatus(GLenum target);
GLPBINDING_API void glClear(ClearBufferMask mask);
GLPBINDING_API void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLPBINDING_API void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLPBINDING_API void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value);
GLPBINDING_API void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value);
GLPBINDING_API void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLPBINDING_API void glClearDepthf(GLfloat d);
GLPBINDING_API void glClearStencil(GLint s);
GLPBINDING_API GLenum glClientWaitSync(GLsync sync, SyncObjectMask flags, GLuint64 timeout);
GLPBINDING_API GLenum glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLPBINDING_API void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLPBINDING_API void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLPBINDING_API void glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLPBINDING_API void glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLPBINDING_API void glCompileShader(GLuint shader);
GLPBINDING_API void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLPBINDING_API void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLPBINDING_API void glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLPBINDING_API void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLPBINDING_API void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLPBINDING_API void glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLPBINDING_API void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLPBINDING_API void glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLPBINDING_API void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLPBINDING_API void glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLPBINDING_API void glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLPBINDING_API void glCopyPathNV(GLuint resultPath, GLuint srcPath);
GLPBINDING_API void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLPBINDING_API void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLPBINDING_API void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLPBINDING_API void glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLPBINDING_API void glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
GLPBINDING_API void glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLPBINDING_API void glCoverFillPathNV(GLuint path, GLenum coverMode);
GLPBINDING_API void glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLPBINDING_API void glCoverStrokePathNV(GLuint path, GLenum coverMode);
GLPBINDING_API void glCoverageMaskNV(GLboolean mask);
GLPBINDING_API void glCoverageModulationNV(GLenum components);
GLPBINDING_API void glCoverageModulationTableNV(GLsizei n, const GLfloat * v);
GLPBINDING_API void glCoverageOperationNV(GLenum operation);
GLPBINDING_API void glCreatePerfQueryINTEL(GLuint queryId, GLuint * queryHandle);
GLPBINDING_API GLuint glCreateProgram();
GLPBINDING_API GLuint glCreateShader(GLenum type);
GLPBINDING_API GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings);
GLPBINDING_API GLuint glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar ** strings);
GLPBINDING_API void glCullFace(GLenum mode);
GLPBINDING_API void glDebugMessageCallback(GLDEBUGPROC callback, const void * userParam);
GLPBINDING_API void glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
GLPBINDING_API void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLPBINDING_API void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLPBINDING_API void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLPBINDING_API void glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLPBINDING_API void glDeleteBuffers(GLsizei n, const GLuint * buffers);
GLPBINDING_API void glDeleteFencesNV(GLsizei n, const GLuint * fences);
GLPBINDING_API void glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers);
GLPBINDING_API void glDeletePathsNV(GLuint path, GLsizei range);
GLPBINDING_API void glDeletePerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLPBINDING_API void glDeletePerfQueryINTEL(GLuint queryHandle);
GLPBINDING_API void glDeleteProgram(GLuint program);
GLPBINDING_API void glDeleteProgramPipelines(GLsizei n, const GLuint * pipelines);
GLPBINDING_API void glDeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines);
GLPBINDING_API void glDeleteQueries(GLsizei n, const GLuint * ids);
GLPBINDING_API void glDeleteQueriesEXT(GLsizei n, const GLuint * ids);
GLPBINDING_API void glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers);
GLPBINDING_API void glDeleteSamplers(GLsizei count, const GLuint * samplers);
GLPBINDING_API void glDeleteShader(GLuint shader);
GLPBINDING_API void glDeleteSync(GLsync sync);
GLPBINDING_API void glDeleteSyncAPPLE(GLsync sync);
GLPBINDING_API void glDeleteTextures(GLsizei n, const GLuint * textures);
GLPBINDING_API void glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids);
GLPBINDING_API void glDeleteVertexArrays(GLsizei n, const GLuint * arrays);
GLPBINDING_API void glDeleteVertexArraysOES(GLsizei n, const GLuint * arrays);
GLPBINDING_API void glDepthFunc(GLenum func);
GLPBINDING_API void glDepthMask(GLboolean flag);
GLPBINDING_API void glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat * v);
GLPBINDING_API void glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
GLPBINDING_API void glDepthRangef(GLfloat n, GLfloat f);
GLPBINDING_API void glDetachShader(GLuint program, GLuint shader);
GLPBINDING_API void glDisable(GLenum cap);
GLPBINDING_API void glDisableDriverControlQCOM(GLuint driverControl);
GLPBINDING_API void glDisableVertexAttribArray(GLuint index);
GLPBINDING_API void glDisablei(GLenum target, GLuint index);
GLPBINDING_API void glDisableiEXT(GLenum target, GLuint index);
GLPBINDING_API void glDisableiNV(GLenum target, GLuint index);
GLPBINDING_API void glDisableiOES(GLenum target, GLuint index);
GLPBINDING_API void glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLPBINDING_API void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLPBINDING_API void glDispatchComputeIndirect(GLintptr indirect);
GLPBINDING_API void glDrawArrays(GLenum mode, GLint first, GLsizei count);
GLPBINDING_API void glDrawArraysIndirect(GLenum mode, const void * indirect);
GLPBINDING_API void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLPBINDING_API void glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLPBINDING_API void glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLPBINDING_API void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLPBINDING_API void glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLPBINDING_API void glDrawBuffers(GLsizei n, const GLenum * bufs);
GLPBINDING_API void glDrawBuffersEXT(GLsizei n, const GLenum * bufs);
GLPBINDING_API void glDrawBuffersIndexedEXT(GLint n, const GLenum * location, const GLint * indices);
GLPBINDING_API void glDrawBuffersNV(GLsizei n, const GLenum * bufs);
GLPBINDING_API void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices);
GLPBINDING_API void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLPBINDING_API void glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLPBINDING_API void glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLPBINDING_API void glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect);
GLPBINDING_API void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
GLPBINDING_API void glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLPBINDING_API void glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLPBINDING_API void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLPBINDING_API void glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLPBINDING_API void glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLPBINDING_API void glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLPBINDING_API void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLPBINDING_API void glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLPBINDING_API void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLPBINDING_API void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLPBINDING_API void glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLPBINDING_API void glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLPBINDING_API void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
GLPBINDING_API void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
GLPBINDING_API void glEnable(GLenum cap);
GLPBINDING_API void glEnableDriverControlQCOM(GLuint driverControl);
GLPBINDING_API void glEnableVertexAttribArray(GLuint index);
GLPBINDING_API void glEnablei(GLenum target, GLuint index);
GLPBINDING_API void glEnableiEXT(GLenum target, GLuint index);
GLPBINDING_API void glEnableiNV(GLenum target, GLuint index);
GLPBINDING_API void glEnableiOES(GLenum target, GLuint index);
GLPBINDING_API void glEndConditionalRenderNV();
GLPBINDING_API void glEndPerfMonitorAMD(GLuint monitor);
GLPBINDING_API void glEndPerfQueryINTEL(GLuint queryHandle);
GLPBINDING_API void glEndQuery(GLenum target);
GLPBINDING_API void glEndQueryEXT(GLenum target);
GLPBINDING_API void glEndTilingQCOM(GLbitfield preserveMask);
GLPBINDING_API void glEndTransformFeedback();
GLPBINDING_API void glExtGetBufferPointervQCOM(GLenum target, void ** params);
GLPBINDING_API void glExtGetBuffersQCOM(GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
GLPBINDING_API void glExtGetFramebuffersQCOM(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
GLPBINDING_API void glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar * source, GLint * length);
GLPBINDING_API void glExtGetProgramsQCOM(GLuint * programs, GLint maxPrograms, GLint * numPrograms);
GLPBINDING_API void glExtGetRenderbuffersQCOM(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
GLPBINDING_API void glExtGetShadersQCOM(GLuint * shaders, GLint maxShaders, GLint * numShaders);
GLPBINDING_API void glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
GLPBINDING_API void glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
GLPBINDING_API void glExtGetTexturesQCOM(GLuint * textures, GLint maxTextures, GLint * numTextures);
GLPBINDING_API GLboolean glExtIsProgramBinaryQCOM(GLuint program);
GLPBINDING_API void glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
GLPBINDING_API GLsync glFenceSync(GLenum condition, UnusedMask flags);
GLPBINDING_API GLsync glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
GLPBINDING_API void glFinish();
GLPBINDING_API void glFinishFenceNV(GLuint fence);
GLPBINDING_API void glFlush();
GLPBINDING_API void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
GLPBINDING_API void glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
GLPBINDING_API void glFragmentCoverageColorNV(GLuint color);
GLPBINDING_API void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
GLPBINDING_API void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLPBINDING_API void glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
GLPBINDING_API void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLPBINDING_API void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLPBINDING_API void glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLPBINDING_API void glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLPBINDING_API void glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLPBINDING_API void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLPBINDING_API void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLPBINDING_API void glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
GLPBINDING_API void glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLPBINDING_API void glFrontFace(GLenum mode);
GLPBINDING_API void glGenBuffers(GLsizei n, GLuint * buffers);
GLPBINDING_API void glGenFencesNV(GLsizei n, GLuint * fences);
GLPBINDING_API void glGenFramebuffers(GLsizei n, GLuint * framebuffers);
GLPBINDING_API GLuint glGenPathsNV(GLsizei range);
GLPBINDING_API void glGenPerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLPBINDING_API void glGenProgramPipelines(GLsizei n, GLuint * pipelines);
GLPBINDING_API void glGenProgramPipelinesEXT(GLsizei n, GLuint * pipelines);
GLPBINDING_API void glGenQueries(GLsizei n, GLuint * ids);
GLPBINDING_API void glGenQueriesEXT(GLsizei n, GLuint * ids);
GLPBINDING_API void glGenRenderbuffers(GLsizei n, GLuint * renderbuffers);
GLPBINDING_API void glGenSamplers(GLsizei count, GLuint * samplers);
GLPBINDING_API void glGenTextures(GLsizei n, GLuint * textures);
GLPBINDING_API void glGenTransformFeedbacks(GLsizei n, GLuint * ids);
GLPBINDING_API void glGenVertexArrays(GLsizei n, GLuint * arrays);
GLPBINDING_API void glGenVertexArraysOES(GLsizei n, GLuint * arrays);
GLPBINDING_API void glGenerateMipmap(GLenum target);
GLPBINDING_API void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLPBINDING_API void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLPBINDING_API void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
GLPBINDING_API void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
GLPBINDING_API void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
GLPBINDING_API void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLPBINDING_API GLint glGetAttribLocation(GLuint program, const GLchar * name);
GLPBINDING_API void glGetBooleani_v(GLenum target, GLuint index, GLboolean * data);
GLPBINDING_API void glGetBooleanv(GLenum pname, GLboolean * data);
GLPBINDING_API void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params);
GLPBINDING_API void glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API void glGetBufferPointerv(GLenum target, GLenum pname, void ** params);
GLPBINDING_API void glGetBufferPointervOES(GLenum target, GLenum pname, void ** params);
GLPBINDING_API void glGetCoverageModulationTableNV(GLsizei bufsize, GLfloat * v);
GLPBINDING_API GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLPBINDING_API GLuint glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLPBINDING_API void glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
GLPBINDING_API void glGetDriverControlsQCOM(GLint * num, GLsizei size, GLuint * driverControls);
GLPBINDING_API GLenum glGetError();
GLPBINDING_API void glGetFenceivNV(GLuint fence, GLenum pname, GLint * params);
GLPBINDING_API void glGetFirstPerfQueryIdINTEL(GLuint * queryId);
GLPBINDING_API void glGetFloati_vNV(GLenum target, GLuint index, GLfloat * data);
GLPBINDING_API void glGetFloatv(GLenum pname, GLfloat * data);
GLPBINDING_API GLint glGetFragDataLocation(GLuint program, const GLchar * name);
GLPBINDING_API void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLPBINDING_API void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API GLenum glGetGraphicsResetStatus();
GLPBINDING_API GLenum glGetGraphicsResetStatusEXT();
GLPBINDING_API GLenum glGetGraphicsResetStatusKHR();
GLPBINDING_API GLuint64 glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLPBINDING_API void glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data);
GLPBINDING_API void glGetInteger64v(GLenum pname, GLint64 * data);
GLPBINDING_API void glGetInteger64vAPPLE(GLenum pname, GLint64 * params);
GLPBINDING_API void glGetIntegeri_v(GLenum target, GLuint index, GLint * data);
GLPBINDING_API void glGetIntegeri_vEXT(GLenum target, GLuint index, GLint * data);
GLPBINDING_API void glGetIntegerv(GLenum pname, GLint * data);
GLPBINDING_API void glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params);
GLPBINDING_API void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
GLPBINDING_API void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat * val);
GLPBINDING_API void glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint * nextQueryId);
GLPBINDING_API void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLPBINDING_API void glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
GLPBINDING_API void glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLPBINDING_API void glGetObjectPtrLabel(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLPBINDING_API void glGetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLPBINDING_API void glGetPathCommandsNV(GLuint path, GLubyte * commands);
GLPBINDING_API void glGetPathCoordsNV(GLuint path, GLfloat * coords);
GLPBINDING_API void glGetPathDashArrayNV(GLuint path, GLfloat * dashArray);
GLPBINDING_API GLfloat glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLPBINDING_API void glGetPathMetricRangeNV(PathRenderingMaskNV metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
GLPBINDING_API void glGetPathMetricsNV(PathRenderingMaskNV metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
GLPBINDING_API void glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat * value);
GLPBINDING_API void glGetPathParameterivNV(GLuint path, GLenum pname, GLint * value);
GLPBINDING_API void glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
GLPBINDING_API void glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
GLPBINDING_API void glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
GLPBINDING_API void glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void * data);
GLPBINDING_API void glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
GLPBINDING_API void glGetPerfMonitorCountersAMD(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
GLPBINDING_API void glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
GLPBINDING_API void glGetPerfMonitorGroupsAMD(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
GLPBINDING_API void glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
GLPBINDING_API void glGetPerfQueryIdByNameINTEL(GLchar * queryName, GLuint * queryId);
GLPBINDING_API void glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
GLPBINDING_API void glGetPointerv(GLenum pname, void ** params);
GLPBINDING_API void glGetPointervKHR(GLenum pname, void ** params);
GLPBINDING_API void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLPBINDING_API void glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLPBINDING_API void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLPBINDING_API void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
GLPBINDING_API void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLPBINDING_API void glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLPBINDING_API void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params);
GLPBINDING_API void glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params);
GLPBINDING_API GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLPBINDING_API GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name);
GLPBINDING_API void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLPBINDING_API void glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params);
GLPBINDING_API void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
GLPBINDING_API void glGetProgramiv(GLuint program, GLenum pname, GLint * params);
GLPBINDING_API void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params);
GLPBINDING_API void glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params);
GLPBINDING_API void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params);
GLPBINDING_API void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params);
GLPBINDING_API void glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params);
GLPBINDING_API void glGetQueryiv(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API void glGetQueryivEXT(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params);
GLPBINDING_API void glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint * params);
GLPBINDING_API void glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint * params);
GLPBINDING_API void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params);
GLPBINDING_API void glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint * params);
GLPBINDING_API void glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint * params);
GLPBINDING_API void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params);
GLPBINDING_API void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params);
GLPBINDING_API void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLPBINDING_API void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
GLPBINDING_API void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLPBINDING_API void glGetShaderiv(GLuint shader, GLenum pname, GLint * params);
GLPBINDING_API const GLubyte * glGetString(GLenum name);
GLPBINDING_API const GLubyte * glGetStringi(GLenum name, GLuint index);
GLPBINDING_API void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLPBINDING_API void glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLPBINDING_API void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
GLPBINDING_API void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
GLPBINDING_API void glGetTexParameterIiv(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API void glGetTexParameterIivOES(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params);
GLPBINDING_API void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params);
GLPBINDING_API void glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint * params);
GLPBINDING_API void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLPBINDING_API void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
GLPBINDING_API GLuint64 glGetTextureHandleNV(GLuint texture);
GLPBINDING_API GLuint64 glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
GLPBINDING_API void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLPBINDING_API void glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source);
GLPBINDING_API GLuint glGetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName);
GLPBINDING_API void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
GLPBINDING_API GLint glGetUniformLocation(GLuint program, const GLchar * name);
GLPBINDING_API void glGetUniformfv(GLuint program, GLint location, GLfloat * params);
GLPBINDING_API void glGetUniformiv(GLuint program, GLint location, GLint * params);
GLPBINDING_API void glGetUniformuiv(GLuint program, GLint location, GLuint * params);
GLPBINDING_API void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params);
GLPBINDING_API void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params);
GLPBINDING_API void glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer);
GLPBINDING_API void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
GLPBINDING_API void glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
GLPBINDING_API void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLPBINDING_API void glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLPBINDING_API void glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLPBINDING_API void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLPBINDING_API void glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLPBINDING_API void glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLPBINDING_API void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLPBINDING_API void glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLPBINDING_API void glHint(GLenum target, GLenum mode);
GLPBINDING_API void glInsertEventMarkerEXT(GLsizei length, const GLchar * marker);
GLPBINDING_API void glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLPBINDING_API void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLPBINDING_API void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLPBINDING_API GLboolean glIsBuffer(GLuint buffer);
GLPBINDING_API GLboolean glIsEnabled(GLenum cap);
GLPBINDING_API GLboolean glIsEnabledi(GLenum target, GLuint index);
GLPBINDING_API GLboolean glIsEnablediEXT(GLenum target, GLuint index);
GLPBINDING_API GLboolean glIsEnablediNV(GLenum target, GLuint index);
GLPBINDING_API GLboolean glIsEnablediOES(GLenum target, GLuint index);
GLPBINDING_API GLboolean glIsFenceNV(GLuint fence);
GLPBINDING_API GLboolean glIsFramebuffer(GLuint framebuffer);
GLPBINDING_API GLboolean glIsImageHandleResidentNV(GLuint64 handle);
GLPBINDING_API GLboolean glIsPathNV(GLuint path);
GLPBINDING_API GLboolean glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLPBINDING_API GLboolean glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
GLPBINDING_API GLboolean glIsProgram(GLuint program);
GLPBINDING_API GLboolean glIsProgramPipeline(GLuint pipeline);
GLPBINDING_API GLboolean glIsProgramPipelineEXT(GLuint pipeline);
GLPBINDING_API GLboolean glIsQuery(GLuint id);
GLPBINDING_API GLboolean glIsQueryEXT(GLuint id);
GLPBINDING_API GLboolean glIsRenderbuffer(GLuint renderbuffer);
GLPBINDING_API GLboolean glIsSampler(GLuint sampler);
GLPBINDING_API GLboolean glIsShader(GLuint shader);
GLPBINDING_API GLboolean glIsSync(GLsync sync);
GLPBINDING_API GLboolean glIsSyncAPPLE(GLsync sync);
GLPBINDING_API GLboolean glIsTexture(GLuint texture);
GLPBINDING_API GLboolean glIsTextureHandleResidentNV(GLuint64 handle);
GLPBINDING_API GLboolean glIsTransformFeedback(GLuint id);
GLPBINDING_API GLboolean glIsVertexArray(GLuint array);
GLPBINDING_API GLboolean glIsVertexArrayOES(GLuint array);
GLPBINDING_API void glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar * label);
GLPBINDING_API void glLineWidth(GLfloat width);
GLPBINDING_API void glLinkProgram(GLuint program);
GLPBINDING_API void glMakeImageHandleNonResidentNV(GLuint64 handle);
GLPBINDING_API void glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
GLPBINDING_API void glMakeTextureHandleNonResidentNV(GLuint64 handle);
GLPBINDING_API void glMakeTextureHandleResidentNV(GLuint64 handle);
GLPBINDING_API void * glMapBufferOES(GLenum target, GLenum access);
GLPBINDING_API void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, BufferAccessMask access);
GLPBINDING_API void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLPBINDING_API void glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat * m);
GLPBINDING_API void glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat * m);
GLPBINDING_API void glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLPBINDING_API void glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat * m);
GLPBINDING_API void glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat * m);
GLPBINDING_API void glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLPBINDING_API void glMemoryBarrier(MemoryBarrierMask barriers);
GLPBINDING_API void glMemoryBarrierByRegion(MemoryBarrierMask barriers);
GLPBINDING_API void glMinSampleShading(GLfloat value);
GLPBINDING_API void glMinSampleShadingOES(GLfloat value);
GLPBINDING_API void glMultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLPBINDING_API void glMultiDrawArraysIndirectEXT(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLPBINDING_API void glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLPBINDING_API void glMultiDrawElementsBaseVertexOES(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLPBINDING_API void glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
GLPBINDING_API void glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLPBINDING_API void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLPBINDING_API void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLPBINDING_API void glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLPBINDING_API void glObjectPtrLabel(const void * ptr, GLsizei length, const GLchar * label);
GLPBINDING_API void glObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label);
GLPBINDING_API void glPatchParameteri(GLenum pname, GLint value);
GLPBINDING_API void glPatchParameteriEXT(GLenum pname, GLint value);
GLPBINDING_API void glPatchParameteriOES(GLenum pname, GLint value);
GLPBINDING_API void glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLPBINDING_API void glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
GLPBINDING_API void glPathCoverDepthFuncNV(GLenum func);
GLPBINDING_API void glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
GLPBINDING_API GLenum glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLPBINDING_API GLenum glPathGlyphIndexRangeNV(GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint_array_2 baseAndCount);
GLPBINDING_API void glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLPBINDING_API void glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLPBINDING_API GLenum glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLPBINDING_API void glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
GLPBINDING_API void glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat * value);
GLPBINDING_API void glPathParameteriNV(GLuint path, GLenum pname, GLint value);
GLPBINDING_API void glPathParameterivNV(GLuint path, GLenum pname, const GLint * value);
GLPBINDING_API void glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
GLPBINDING_API void glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
GLPBINDING_API void glPathStringNV(GLuint path, GLenum format, GLsizei length, const void * pathString);
GLPBINDING_API void glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLPBINDING_API void glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
GLPBINDING_API void glPauseTransformFeedback();
GLPBINDING_API void glPixelStorei(GLenum pname, GLint param);
GLPBINDING_API GLboolean glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
GLPBINDING_API void glPolygonModeNV(GLenum face, GLenum mode);
GLPBINDING_API void glPolygonOffset(GLfloat factor, GLfloat units);
GLPBINDING_API void glPopDebugGroup();
GLPBINDING_API void glPopDebugGroupKHR();
GLPBINDING_API void glPopGroupMarkerEXT();
GLPBINDING_API void glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLPBINDING_API void glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLPBINDING_API void glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLPBINDING_API void glProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
GLPBINDING_API void glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
GLPBINDING_API void glProgramParameteri(GLuint program, GLenum pname, GLint value);
GLPBINDING_API void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
GLPBINDING_API void glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
GLPBINDING_API void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
GLPBINDING_API void glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
GLPBINDING_API void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform1i(GLuint program, GLint location, GLint v0);
GLPBINDING_API void glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
GLPBINDING_API void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
GLPBINDING_API void glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
GLPBINDING_API void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLPBINDING_API void glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLPBINDING_API void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
GLPBINDING_API void glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
GLPBINDING_API void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
GLPBINDING_API void glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
GLPBINDING_API void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLPBINDING_API void glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLPBINDING_API void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLPBINDING_API void glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLPBINDING_API void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLPBINDING_API void glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLPBINDING_API void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLPBINDING_API void glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLPBINDING_API void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLPBINDING_API void glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLPBINDING_API void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLPBINDING_API void glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLPBINDING_API void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
GLPBINDING_API void glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLPBINDING_API void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLPBINDING_API void glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLPBINDING_API void glPushGroupMarkerEXT(GLsizei length, const GLchar * marker);
GLPBINDING_API void glQueryCounterEXT(GLuint id, GLenum target);
GLPBINDING_API void glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
GLPBINDING_API void glReadBuffer(GLenum src);
GLPBINDING_API void glReadBufferIndexedEXT(GLenum src, GLint index);
GLPBINDING_API void glReadBufferNV(GLenum mode);
GLPBINDING_API void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLPBINDING_API void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLPBINDING_API void glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLPBINDING_API void glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLPBINDING_API void glReleaseShaderCompiler();
GLPBINDING_API void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glResolveDepthValuesNV();
GLPBINDING_API void glResolveMultisampleFramebufferAPPLE();
GLPBINDING_API void glResumeTransformFeedback();
GLPBINDING_API void glSampleCoverage(GLfloat value, GLboolean invert);
GLPBINDING_API void glSampleMaski(GLuint maskNumber, GLbitfield mask);
GLPBINDING_API void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param);
GLPBINDING_API void glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint * param);
GLPBINDING_API void glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint * param);
GLPBINDING_API void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param);
GLPBINDING_API void glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint * param);
GLPBINDING_API void glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint * param);
GLPBINDING_API void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
GLPBINDING_API void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param);
GLPBINDING_API void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
GLPBINDING_API void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param);
GLPBINDING_API void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
GLPBINDING_API void glScissorArrayvNV(GLuint first, GLsizei count, const GLint * v);
GLPBINDING_API void glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLPBINDING_API void glScissorIndexedvNV(GLuint index, const GLint * v);
GLPBINDING_API void glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
GLPBINDING_API void glSetFenceNV(GLuint fence, GLenum condition);
GLPBINDING_API void glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
GLPBINDING_API void glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
GLPBINDING_API void glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
GLPBINDING_API void glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLPBINDING_API void glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
GLPBINDING_API void glStencilFunc(GLenum func, GLint ref, GLuint mask);
GLPBINDING_API void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
GLPBINDING_API void glStencilMask(GLuint mask);
GLPBINDING_API void glStencilMaskSeparate(GLenum face, GLuint mask);
GLPBINDING_API void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
GLPBINDING_API void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLPBINDING_API void glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLPBINDING_API void glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
GLPBINDING_API void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLPBINDING_API void glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLPBINDING_API void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLPBINDING_API void glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
GLPBINDING_API void glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
GLPBINDING_API GLboolean glTestFenceNV(GLuint fence);
GLPBINDING_API void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
GLPBINDING_API void glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
GLPBINDING_API void glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
GLPBINDING_API void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLPBINDING_API void glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLPBINDING_API void glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLPBINDING_API void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLPBINDING_API void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLPBINDING_API void glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLPBINDING_API void glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLPBINDING_API void glTexParameterIiv(GLenum target, GLenum pname, const GLint * params);
GLPBINDING_API void glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params);
GLPBINDING_API void glTexParameterIivOES(GLenum target, GLenum pname, const GLint * params);
GLPBINDING_API void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint * params);
GLPBINDING_API void glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params);
GLPBINDING_API void glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint * params);
GLPBINDING_API void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
GLPBINDING_API void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLPBINDING_API void glTexParameteri(GLenum target, GLenum pname, GLint param);
GLPBINDING_API void glTexParameteriv(GLenum target, GLenum pname, const GLint * params);
GLPBINDING_API void glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLPBINDING_API void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLPBINDING_API void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLPBINDING_API void glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLPBINDING_API void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLPBINDING_API void glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLPBINDING_API void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLPBINDING_API void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLPBINDING_API void glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLPBINDING_API void glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLPBINDING_API void glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLPBINDING_API void glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLPBINDING_API void glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLPBINDING_API void glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLPBINDING_API void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLPBINDING_API void glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
GLPBINDING_API void glUniform1f(GLint location, GLfloat v0);
GLPBINDING_API void glUniform1fv(GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glUniform1i(GLint location, GLint v0);
GLPBINDING_API void glUniform1iv(GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glUniform1ui(GLint location, GLuint v0);
GLPBINDING_API void glUniform1uiv(GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
GLPBINDING_API void glUniform2fv(GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glUniform2i(GLint location, GLint v0, GLint v1);
GLPBINDING_API void glUniform2iv(GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glUniform2ui(GLint location, GLuint v0, GLuint v1);
GLPBINDING_API void glUniform2uiv(GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLPBINDING_API void glUniform3fv(GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
GLPBINDING_API void glUniform3iv(GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLPBINDING_API void glUniform3uiv(GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLPBINDING_API void glUniform4fv(GLint location, GLsizei count, const GLfloat * value);
GLPBINDING_API void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLPBINDING_API void glUniform4iv(GLint location, GLsizei count, const GLint * value);
GLPBINDING_API void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLPBINDING_API void glUniform4uiv(GLint location, GLsizei count, const GLuint * value);
GLPBINDING_API void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
GLPBINDING_API void glUniformHandleui64NV(GLint location, GLuint64 value);
GLPBINDING_API void glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 * value);
GLPBINDING_API void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API void glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLPBINDING_API GLboolean glUnmapBuffer(GLenum target);
GLPBINDING_API GLboolean glUnmapBufferOES(GLenum target);
GLPBINDING_API void glUseProgram(GLuint program);
GLPBINDING_API void glUseProgramStages(GLuint pipeline, UseProgramStageMask stages, GLuint program);
GLPBINDING_API void glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
GLPBINDING_API void glValidateProgram(GLuint program);
GLPBINDING_API void glValidateProgramPipeline(GLuint pipeline);
GLPBINDING_API void glValidateProgramPipelineEXT(GLuint pipeline);
GLPBINDING_API void glVertexAttrib1f(GLuint index, GLfloat x);
GLPBINDING_API void glVertexAttrib1fv(GLuint index, const GLfloat * v);
GLPBINDING_API void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
GLPBINDING_API void glVertexAttrib2fv(GLuint index, const GLfloat * v);
GLPBINDING_API void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLPBINDING_API void glVertexAttrib3fv(GLuint index, const GLfloat * v);
GLPBINDING_API void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLPBINDING_API void glVertexAttrib4fv(GLuint index, const GLfloat * v);
GLPBINDING_API void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
GLPBINDING_API void glVertexAttribDivisor(GLuint index, GLuint divisor);
GLPBINDING_API void glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
GLPBINDING_API void glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
GLPBINDING_API void glVertexAttribDivisorNV(GLuint index, GLuint divisor);
GLPBINDING_API void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLPBINDING_API void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLPBINDING_API void glVertexAttribI4iv(GLuint index, const GLint * v);
GLPBINDING_API void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLPBINDING_API void glVertexAttribI4uiv(GLuint index, const GLuint * v);
GLPBINDING_API void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLPBINDING_API void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLPBINDING_API void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLPBINDING_API void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
GLPBINDING_API void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
GLPBINDING_API void glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat * v);
GLPBINDING_API void glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLPBINDING_API void glViewportIndexedfvNV(GLuint index, const GLfloat * v);
GLPBINDING_API void glWaitSync(GLsync sync, UnusedMask flags, GLuint64 timeout);
GLPBINDING_API void glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLPBINDING_API void glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);

} // namespace glp
