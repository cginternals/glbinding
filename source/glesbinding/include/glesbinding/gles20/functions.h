#pragma once

#include <glesbinding/nogles.h>
#include <glesbinding/gles/functions.h>


namespace gles20
{

using gles::glActiveTexture;
using gles::glAttachShader;
using gles::glBindAttribLocation;
using gles::glBindBuffer;
using gles::glBindFramebuffer;
using gles::glBindRenderbuffer;
using gles::glBindTexture;
using gles::glBlendColor;
using gles::glBlendEquation;
using gles::glBlendEquationSeparate;
using gles::glBlendFunc;
using gles::glBlendFuncSeparate;
using gles::glBufferData;
using gles::glBufferSubData;
using gles::glCheckFramebufferStatus;
using gles::glClear;
using gles::glClearColor;
using gles::glClearDepthf;
using gles::glClearStencil;
using gles::glColorMask;
using gles::glCompileShader;
using gles::glCompressedTexImage2D;
using gles::glCompressedTexSubImage2D;
using gles::glCopyTexImage2D;
using gles::glCopyTexSubImage2D;
using gles::glCreateProgram;
using gles::glCreateShader;
using gles::glCullFace;
using gles::glDeleteBuffers;
using gles::glDeleteFramebuffers;
using gles::glDeleteProgram;
using gles::glDeleteRenderbuffers;
using gles::glDeleteShader;
using gles::glDeleteTextures;
using gles::glDepthFunc;
using gles::glDepthMask;
using gles::glDepthRangef;
using gles::glDetachShader;
using gles::glDisable;
using gles::glDisableVertexAttribArray;
using gles::glDrawArrays;
using gles::glDrawElements;
using gles::glEnable;
using gles::glEnableVertexAttribArray;
using gles::glFinish;
using gles::glFlush;
using gles::glFramebufferRenderbuffer;
using gles::glFramebufferTexture2D;
using gles::glFrontFace;
using gles::glGenBuffers;
using gles::glGenFramebuffers;
using gles::glGenRenderbuffers;
using gles::glGenTextures;
using gles::glGenerateMipmap;
using gles::glGetActiveAttrib;
using gles::glGetActiveUniform;
using gles::glGetAttachedShaders;
using gles::glGetAttribLocation;
using gles::glGetBooleanv;
using gles::glGetBufferParameteriv;
using gles::glGetError;
using gles::glGetFloatv;
using gles::glGetFramebufferAttachmentParameteriv;
using gles::glGetIntegerv;
using gles::glGetProgramInfoLog;
using gles::glGetProgramiv;
using gles::glGetRenderbufferParameteriv;
using gles::glGetShaderInfoLog;
using gles::glGetShaderPrecisionFormat;
using gles::glGetShaderSource;
using gles::glGetShaderiv;
using gles::glGetString;
using gles::glGetTexParameterfv;
using gles::glGetTexParameteriv;
using gles::glGetUniformLocation;
using gles::glGetUniformfv;
using gles::glGetUniformiv;
using gles::glGetVertexAttribPointerv;
using gles::glGetVertexAttribfv;
using gles::glGetVertexAttribiv;
using gles::glHint;
using gles::glIsBuffer;
using gles::glIsEnabled;
using gles::glIsFramebuffer;
using gles::glIsProgram;
using gles::glIsRenderbuffer;
using gles::glIsShader;
using gles::glIsTexture;
using gles::glLineWidth;
using gles::glLinkProgram;
using gles::glPixelStorei;
using gles::glPolygonOffset;
using gles::glReadPixels;
using gles::glReleaseShaderCompiler;
using gles::glRenderbufferStorage;
using gles::glSampleCoverage;
using gles::glScissor;
using gles::glShaderBinary;
using gles::glShaderSource;
using gles::glStencilFunc;
using gles::glStencilFuncSeparate;
using gles::glStencilMask;
using gles::glStencilMaskSeparate;
using gles::glStencilOp;
using gles::glStencilOpSeparate;
using gles::glTexImage2D;
using gles::glTexParameterf;
using gles::glTexParameterfv;
using gles::glTexParameteri;
using gles::glTexParameteriv;
using gles::glTexSubImage2D;
using gles::glUniform1f;
using gles::glUniform1fv;
using gles::glUniform1i;
using gles::glUniform1iv;
using gles::glUniform2f;
using gles::glUniform2fv;
using gles::glUniform2i;
using gles::glUniform2iv;
using gles::glUniform3f;
using gles::glUniform3fv;
using gles::glUniform3i;
using gles::glUniform3iv;
using gles::glUniform4f;
using gles::glUniform4fv;
using gles::glUniform4i;
using gles::glUniform4iv;
using gles::glUniformMatrix2fv;
using gles::glUniformMatrix3fv;
using gles::glUniformMatrix4fv;
using gles::glUseProgram;
using gles::glValidateProgram;
using gles::glVertexAttrib1f;
using gles::glVertexAttrib1fv;
using gles::glVertexAttrib2f;
using gles::glVertexAttrib2fv;
using gles::glVertexAttrib3f;
using gles::glVertexAttrib3fv;
using gles::glVertexAttrib4f;
using gles::glVertexAttrib4fv;
using gles::glVertexAttribPointer;
using gles::glViewport;

} // namespace gles20
