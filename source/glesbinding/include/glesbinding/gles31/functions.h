#pragma once

#include <glesbinding/nogles.h>
#include <glesbinding/gles/functions.h>


namespace gles31
{

using gles::glActiveShaderProgram;
using gles::glActiveTexture;
using gles::glAttachShader;
using gles::glBeginQuery;
using gles::glBeginTransformFeedback;
using gles::glBindAttribLocation;
using gles::glBindBuffer;
using gles::glBindBufferBase;
using gles::glBindBufferRange;
using gles::glBindFramebuffer;
using gles::glBindImageTexture;
using gles::glBindProgramPipeline;
using gles::glBindRenderbuffer;
using gles::glBindSampler;
using gles::glBindTexture;
using gles::glBindTransformFeedback;
using gles::glBindVertexArray;
using gles::glBindVertexBuffer;
using gles::glBlendColor;
using gles::glBlendEquation;
using gles::glBlendEquationSeparate;
using gles::glBlendFunc;
using gles::glBlendFuncSeparate;
using gles::glBlitFramebuffer;
using gles::glBufferData;
using gles::glBufferSubData;
using gles::glCheckFramebufferStatus;
using gles::glClear;
using gles::glClearBufferfi;
using gles::glClearBufferfv;
using gles::glClearBufferiv;
using gles::glClearBufferuiv;
using gles::glClearColor;
using gles::glClearDepthf;
using gles::glClearStencil;
using gles::glClientWaitSync;
using gles::glColorMask;
using gles::glCompileShader;
using gles::glCompressedTexImage2D;
using gles::glCompressedTexImage3D;
using gles::glCompressedTexSubImage2D;
using gles::glCompressedTexSubImage3D;
using gles::glCopyBufferSubData;
using gles::glCopyTexImage2D;
using gles::glCopyTexSubImage2D;
using gles::glCopyTexSubImage3D;
using gles::glCreateProgram;
using gles::glCreateShader;
using gles::glCreateShaderProgramv;
using gles::glCullFace;
using gles::glDeleteBuffers;
using gles::glDeleteFramebuffers;
using gles::glDeleteProgram;
using gles::glDeleteProgramPipelines;
using gles::glDeleteQueries;
using gles::glDeleteRenderbuffers;
using gles::glDeleteSamplers;
using gles::glDeleteShader;
using gles::glDeleteSync;
using gles::glDeleteTextures;
using gles::glDeleteTransformFeedbacks;
using gles::glDeleteVertexArrays;
using gles::glDepthFunc;
using gles::glDepthMask;
using gles::glDepthRangef;
using gles::glDetachShader;
using gles::glDisable;
using gles::glDisableVertexAttribArray;
using gles::glDispatchCompute;
using gles::glDispatchComputeIndirect;
using gles::glDrawArrays;
using gles::glDrawArraysIndirect;
using gles::glDrawArraysInstanced;
using gles::glDrawBuffers;
using gles::glDrawElements;
using gles::glDrawElementsIndirect;
using gles::glDrawElementsInstanced;
using gles::glDrawRangeElements;
using gles::glEnable;
using gles::glEnableVertexAttribArray;
using gles::glEndQuery;
using gles::glEndTransformFeedback;
using gles::glFenceSync;
using gles::glFinish;
using gles::glFlush;
using gles::glFlushMappedBufferRange;
using gles::glFramebufferParameteri;
using gles::glFramebufferRenderbuffer;
using gles::glFramebufferTexture2D;
using gles::glFramebufferTextureLayer;
using gles::glFrontFace;
using gles::glGenBuffers;
using gles::glGenFramebuffers;
using gles::glGenProgramPipelines;
using gles::glGenQueries;
using gles::glGenRenderbuffers;
using gles::glGenSamplers;
using gles::glGenTextures;
using gles::glGenTransformFeedbacks;
using gles::glGenVertexArrays;
using gles::glGenerateMipmap;
using gles::glGetActiveAttrib;
using gles::glGetActiveUniform;
using gles::glGetActiveUniformBlockName;
using gles::glGetActiveUniformBlockiv;
using gles::glGetActiveUniformsiv;
using gles::glGetAttachedShaders;
using gles::glGetAttribLocation;
using gles::glGetBooleani_v;
using gles::glGetBooleanv;
using gles::glGetBufferParameteri64v;
using gles::glGetBufferParameteriv;
using gles::glGetBufferPointerv;
using gles::glGetError;
using gles::glGetFloatv;
using gles::glGetFragDataLocation;
using gles::glGetFramebufferAttachmentParameteriv;
using gles::glGetFramebufferParameteriv;
using gles::glGetInteger64i_v;
using gles::glGetInteger64v;
using gles::glGetIntegeri_v;
using gles::glGetIntegerv;
using gles::glGetInternalformativ;
using gles::glGetMultisamplefv;
using gles::glGetProgramBinary;
using gles::glGetProgramInfoLog;
using gles::glGetProgramInterfaceiv;
using gles::glGetProgramPipelineInfoLog;
using gles::glGetProgramPipelineiv;
using gles::glGetProgramResourceIndex;
using gles::glGetProgramResourceLocation;
using gles::glGetProgramResourceName;
using gles::glGetProgramResourceiv;
using gles::glGetProgramiv;
using gles::glGetQueryObjectuiv;
using gles::glGetQueryiv;
using gles::glGetRenderbufferParameteriv;
using gles::glGetSamplerParameterfv;
using gles::glGetSamplerParameteriv;
using gles::glGetShaderInfoLog;
using gles::glGetShaderPrecisionFormat;
using gles::glGetShaderSource;
using gles::glGetShaderiv;
using gles::glGetString;
using gles::glGetStringi;
using gles::glGetSynciv;
using gles::glGetTexLevelParameterfv;
using gles::glGetTexLevelParameteriv;
using gles::glGetTexParameterfv;
using gles::glGetTexParameteriv;
using gles::glGetTransformFeedbackVarying;
using gles::glGetUniformBlockIndex;
using gles::glGetUniformIndices;
using gles::glGetUniformLocation;
using gles::glGetUniformfv;
using gles::glGetUniformiv;
using gles::glGetUniformuiv;
using gles::glGetVertexAttribIiv;
using gles::glGetVertexAttribIuiv;
using gles::glGetVertexAttribPointerv;
using gles::glGetVertexAttribfv;
using gles::glGetVertexAttribiv;
using gles::glHint;
using gles::glInvalidateFramebuffer;
using gles::glInvalidateSubFramebuffer;
using gles::glIsBuffer;
using gles::glIsEnabled;
using gles::glIsFramebuffer;
using gles::glIsProgram;
using gles::glIsProgramPipeline;
using gles::glIsQuery;
using gles::glIsRenderbuffer;
using gles::glIsSampler;
using gles::glIsShader;
using gles::glIsSync;
using gles::glIsTexture;
using gles::glIsTransformFeedback;
using gles::glIsVertexArray;
using gles::glLineWidth;
using gles::glLinkProgram;
using gles::glMapBufferRange;
using gles::glMemoryBarrier;
using gles::glMemoryBarrierByRegion;
using gles::glPauseTransformFeedback;
using gles::glPixelStorei;
using gles::glPolygonOffset;
using gles::glProgramBinary;
using gles::glProgramParameteri;
using gles::glProgramUniform1f;
using gles::glProgramUniform1fv;
using gles::glProgramUniform1i;
using gles::glProgramUniform1iv;
using gles::glProgramUniform1ui;
using gles::glProgramUniform1uiv;
using gles::glProgramUniform2f;
using gles::glProgramUniform2fv;
using gles::glProgramUniform2i;
using gles::glProgramUniform2iv;
using gles::glProgramUniform2ui;
using gles::glProgramUniform2uiv;
using gles::glProgramUniform3f;
using gles::glProgramUniform3fv;
using gles::glProgramUniform3i;
using gles::glProgramUniform3iv;
using gles::glProgramUniform3ui;
using gles::glProgramUniform3uiv;
using gles::glProgramUniform4f;
using gles::glProgramUniform4fv;
using gles::glProgramUniform4i;
using gles::glProgramUniform4iv;
using gles::glProgramUniform4ui;
using gles::glProgramUniform4uiv;
using gles::glProgramUniformMatrix2fv;
using gles::glProgramUniformMatrix2x3fv;
using gles::glProgramUniformMatrix2x4fv;
using gles::glProgramUniformMatrix3fv;
using gles::glProgramUniformMatrix3x2fv;
using gles::glProgramUniformMatrix3x4fv;
using gles::glProgramUniformMatrix4fv;
using gles::glProgramUniformMatrix4x2fv;
using gles::glProgramUniformMatrix4x3fv;
using gles::glReadBuffer;
using gles::glReadPixels;
using gles::glReleaseShaderCompiler;
using gles::glRenderbufferStorage;
using gles::glRenderbufferStorageMultisample;
using gles::glResumeTransformFeedback;
using gles::glSampleCoverage;
using gles::glSampleMaski;
using gles::glSamplerParameterf;
using gles::glSamplerParameterfv;
using gles::glSamplerParameteri;
using gles::glSamplerParameteriv;
using gles::glScissor;
using gles::glShaderBinary;
using gles::glShaderSource;
using gles::glStencilFunc;
using gles::glStencilFuncSeparate;
using gles::glStencilMask;
using gles::glStencilMaskSeparate;
using gles::glStencilOp;
using gles::glStencilOpSeparate;
using gles::glTexImage2D;
using gles::glTexImage3D;
using gles::glTexParameterf;
using gles::glTexParameterfv;
using gles::glTexParameteri;
using gles::glTexParameteriv;
using gles::glTexStorage2D;
using gles::glTexStorage2DMultisample;
using gles::glTexStorage3D;
using gles::glTexSubImage2D;
using gles::glTexSubImage3D;
using gles::glTransformFeedbackVaryings;
using gles::glUniform1f;
using gles::glUniform1fv;
using gles::glUniform1i;
using gles::glUniform1iv;
using gles::glUniform1ui;
using gles::glUniform1uiv;
using gles::glUniform2f;
using gles::glUniform2fv;
using gles::glUniform2i;
using gles::glUniform2iv;
using gles::glUniform2ui;
using gles::glUniform2uiv;
using gles::glUniform3f;
using gles::glUniform3fv;
using gles::glUniform3i;
using gles::glUniform3iv;
using gles::glUniform3ui;
using gles::glUniform3uiv;
using gles::glUniform4f;
using gles::glUniform4fv;
using gles::glUniform4i;
using gles::glUniform4iv;
using gles::glUniform4ui;
using gles::glUniform4uiv;
using gles::glUniformBlockBinding;
using gles::glUniformMatrix2fv;
using gles::glUniformMatrix2x3fv;
using gles::glUniformMatrix2x4fv;
using gles::glUniformMatrix3fv;
using gles::glUniformMatrix3x2fv;
using gles::glUniformMatrix3x4fv;
using gles::glUniformMatrix4fv;
using gles::glUniformMatrix4x2fv;
using gles::glUniformMatrix4x3fv;
using gles::glUnmapBuffer;
using gles::glUseProgram;
using gles::glUseProgramStages;
using gles::glValidateProgram;
using gles::glValidateProgramPipeline;
using gles::glVertexAttrib1f;
using gles::glVertexAttrib1fv;
using gles::glVertexAttrib2f;
using gles::glVertexAttrib2fv;
using gles::glVertexAttrib3f;
using gles::glVertexAttrib3fv;
using gles::glVertexAttrib4f;
using gles::glVertexAttrib4fv;
using gles::glVertexAttribBinding;
using gles::glVertexAttribDivisor;
using gles::glVertexAttribFormat;
using gles::glVertexAttribI4i;
using gles::glVertexAttribI4iv;
using gles::glVertexAttribI4ui;
using gles::glVertexAttribI4uiv;
using gles::glVertexAttribIFormat;
using gles::glVertexAttribIPointer;
using gles::glVertexAttribPointer;
using gles::glVertexBindingDivisor;
using gles::glViewport;
using gles::glWaitSync;

} // namespace gles31
