#pragma once

#include <glesbinding/glesbinding_api.h>

#include <glesbinding/nogles.h>
#include <glesbinding/gles/types.h>


namespace gles
{

GLESBINDING_API void glActiveShaderProgram(GLuint pipeline, GLuint program);
GLESBINDING_API void glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
GLESBINDING_API void glActiveTexture(GLenum texture);
GLESBINDING_API void glAlphaFuncQCOM(GLenum func, GLclampf ref);
GLESBINDING_API void glApplyFramebufferAttachmentCMAAINTEL();
GLESBINDING_API void glAttachShader(GLuint program, GLuint shader);
GLESBINDING_API void glBeginConditionalRenderNV(GLuint id, GLenum mode);
GLESBINDING_API void glBeginPerfMonitorAMD(GLuint monitor);
GLESBINDING_API void glBeginPerfQueryINTEL(GLuint queryHandle);
GLESBINDING_API void glBeginQuery(GLenum target, GLuint id);
GLESBINDING_API void glBeginQueryEXT(GLenum target, GLuint id);
GLESBINDING_API void glBeginTransformFeedback(GLenum primitiveMode);
GLESBINDING_API void glBindAttribLocation(GLuint program, GLuint index, const GLchar * name);
GLESBINDING_API void glBindBuffer(GLenum target, GLuint buffer);
GLESBINDING_API void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
GLESBINDING_API void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLESBINDING_API void glBindFramebuffer(GLenum target, GLuint framebuffer);
GLESBINDING_API void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLESBINDING_API void glBindProgramPipeline(GLuint pipeline);
GLESBINDING_API void glBindProgramPipelineEXT(GLuint pipeline);
GLESBINDING_API void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
GLESBINDING_API void glBindSampler(GLuint unit, GLuint sampler);
GLESBINDING_API void glBindTexture(GLenum target, GLuint texture);
GLESBINDING_API void glBindTransformFeedback(GLenum target, GLuint id);
GLESBINDING_API void glBindVertexArray(GLuint array);
GLESBINDING_API void glBindVertexArrayOES(GLuint array);
GLESBINDING_API void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLESBINDING_API void glBlendBarrier();
GLESBINDING_API void glBlendBarrierKHR();
GLESBINDING_API void glBlendBarrierNV();
GLESBINDING_API void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLESBINDING_API void glBlendEquation(GLenum mode);
GLESBINDING_API void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
GLESBINDING_API void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLESBINDING_API void glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLESBINDING_API void glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLESBINDING_API void glBlendEquationi(GLuint buf, GLenum mode);
GLESBINDING_API void glBlendEquationiEXT(GLuint buf, GLenum mode);
GLESBINDING_API void glBlendEquationiOES(GLuint buf, GLenum mode);
GLESBINDING_API void glBlendFunc(GLenum sfactor, GLenum dfactor);
GLESBINDING_API void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLESBINDING_API void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLESBINDING_API void glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLESBINDING_API void glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLESBINDING_API void glBlendFunci(GLuint buf, GLenum src, GLenum dst);
GLESBINDING_API void glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
GLESBINDING_API void glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
GLESBINDING_API void glBlendParameteriNV(GLenum pname, GLint value);
GLESBINDING_API void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLESBINDING_API void glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLESBINDING_API void glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLESBINDING_API void glBufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
GLESBINDING_API void glBufferStorageEXT(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
GLESBINDING_API void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
GLESBINDING_API GLenum glCheckFramebufferStatus(GLenum target);
GLESBINDING_API void glClear(ClearBufferMask mask);
GLESBINDING_API void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLESBINDING_API void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLESBINDING_API void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value);
GLESBINDING_API void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value);
GLESBINDING_API void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLESBINDING_API void glClearDepthf(GLfloat d);
GLESBINDING_API void glClearStencil(GLint s);
GLESBINDING_API GLenum glClientWaitSync(GLsync sync, SyncObjectMask flags, GLuint64 timeout);
GLESBINDING_API GLenum glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLESBINDING_API void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLESBINDING_API void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLESBINDING_API void glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLESBINDING_API void glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLESBINDING_API void glCompileShader(GLuint shader);
GLESBINDING_API void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLESBINDING_API void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLESBINDING_API void glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLESBINDING_API void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLESBINDING_API void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLESBINDING_API void glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLESBINDING_API void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLESBINDING_API void glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLESBINDING_API void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLESBINDING_API void glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLESBINDING_API void glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLESBINDING_API void glCopyPathNV(GLuint resultPath, GLuint srcPath);
GLESBINDING_API void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLESBINDING_API void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLESBINDING_API void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLESBINDING_API void glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLESBINDING_API void glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
GLESBINDING_API void glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLESBINDING_API void glCoverFillPathNV(GLuint path, GLenum coverMode);
GLESBINDING_API void glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLESBINDING_API void glCoverStrokePathNV(GLuint path, GLenum coverMode);
GLESBINDING_API void glCoverageMaskNV(GLboolean mask);
GLESBINDING_API void glCoverageModulationNV(GLenum components);
GLESBINDING_API void glCoverageModulationTableNV(GLsizei n, const GLfloat * v);
GLESBINDING_API void glCoverageOperationNV(GLenum operation);
GLESBINDING_API void glCreatePerfQueryINTEL(GLuint queryId, GLuint * queryHandle);
GLESBINDING_API GLuint glCreateProgram();
GLESBINDING_API GLuint glCreateShader(GLenum type);
GLESBINDING_API GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings);
GLESBINDING_API GLuint glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar ** strings);
GLESBINDING_API void glCullFace(GLenum mode);
GLESBINDING_API void glDebugMessageCallback(GLDEBUGPROC callback, const void * userParam);
GLESBINDING_API void glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
GLESBINDING_API void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLESBINDING_API void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLESBINDING_API void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLESBINDING_API void glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLESBINDING_API void glDeleteBuffers(GLsizei n, const GLuint * buffers);
GLESBINDING_API void glDeleteFencesNV(GLsizei n, const GLuint * fences);
GLESBINDING_API void glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers);
GLESBINDING_API void glDeletePathsNV(GLuint path, GLsizei range);
GLESBINDING_API void glDeletePerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLESBINDING_API void glDeletePerfQueryINTEL(GLuint queryHandle);
GLESBINDING_API void glDeleteProgram(GLuint program);
GLESBINDING_API void glDeleteProgramPipelines(GLsizei n, const GLuint * pipelines);
GLESBINDING_API void glDeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines);
GLESBINDING_API void glDeleteQueries(GLsizei n, const GLuint * ids);
GLESBINDING_API void glDeleteQueriesEXT(GLsizei n, const GLuint * ids);
GLESBINDING_API void glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers);
GLESBINDING_API void glDeleteSamplers(GLsizei count, const GLuint * samplers);
GLESBINDING_API void glDeleteShader(GLuint shader);
GLESBINDING_API void glDeleteSync(GLsync sync);
GLESBINDING_API void glDeleteSyncAPPLE(GLsync sync);
GLESBINDING_API void glDeleteTextures(GLsizei n, const GLuint * textures);
GLESBINDING_API void glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids);
GLESBINDING_API void glDeleteVertexArrays(GLsizei n, const GLuint * arrays);
GLESBINDING_API void glDeleteVertexArraysOES(GLsizei n, const GLuint * arrays);
GLESBINDING_API void glDepthFunc(GLenum func);
GLESBINDING_API void glDepthMask(GLboolean flag);
GLESBINDING_API void glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat * v);
GLESBINDING_API void glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
GLESBINDING_API void glDepthRangef(GLfloat n, GLfloat f);
GLESBINDING_API void glDetachShader(GLuint program, GLuint shader);
GLESBINDING_API void glDisable(GLenum cap);
GLESBINDING_API void glDisableDriverControlQCOM(GLuint driverControl);
GLESBINDING_API void glDisableVertexAttribArray(GLuint index);
GLESBINDING_API void glDisablei(GLenum target, GLuint index);
GLESBINDING_API void glDisableiEXT(GLenum target, GLuint index);
GLESBINDING_API void glDisableiNV(GLenum target, GLuint index);
GLESBINDING_API void glDisableiOES(GLenum target, GLuint index);
GLESBINDING_API void glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLESBINDING_API void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLESBINDING_API void glDispatchComputeIndirect(GLintptr indirect);
GLESBINDING_API void glDrawArrays(GLenum mode, GLint first, GLsizei count);
GLESBINDING_API void glDrawArraysIndirect(GLenum mode, const void * indirect);
GLESBINDING_API void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLESBINDING_API void glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLESBINDING_API void glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLESBINDING_API void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLESBINDING_API void glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLESBINDING_API void glDrawBuffers(GLsizei n, const GLenum * bufs);
GLESBINDING_API void glDrawBuffersEXT(GLsizei n, const GLenum * bufs);
GLESBINDING_API void glDrawBuffersIndexedEXT(GLint n, const GLenum * location, const GLint * indices);
GLESBINDING_API void glDrawBuffersNV(GLsizei n, const GLenum * bufs);
GLESBINDING_API void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices);
GLESBINDING_API void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLESBINDING_API void glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLESBINDING_API void glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLESBINDING_API void glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect);
GLESBINDING_API void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
GLESBINDING_API void glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLESBINDING_API void glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLESBINDING_API void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLESBINDING_API void glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLESBINDING_API void glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLESBINDING_API void glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLESBINDING_API void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLESBINDING_API void glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLESBINDING_API void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLESBINDING_API void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLESBINDING_API void glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLESBINDING_API void glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLESBINDING_API void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
GLESBINDING_API void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
GLESBINDING_API void glEnable(GLenum cap);
GLESBINDING_API void glEnableDriverControlQCOM(GLuint driverControl);
GLESBINDING_API void glEnableVertexAttribArray(GLuint index);
GLESBINDING_API void glEnablei(GLenum target, GLuint index);
GLESBINDING_API void glEnableiEXT(GLenum target, GLuint index);
GLESBINDING_API void glEnableiNV(GLenum target, GLuint index);
GLESBINDING_API void glEnableiOES(GLenum target, GLuint index);
GLESBINDING_API void glEndConditionalRenderNV();
GLESBINDING_API void glEndPerfMonitorAMD(GLuint monitor);
GLESBINDING_API void glEndPerfQueryINTEL(GLuint queryHandle);
GLESBINDING_API void glEndQuery(GLenum target);
GLESBINDING_API void glEndQueryEXT(GLenum target);
GLESBINDING_API void glEndTilingQCOM(GLbitfield preserveMask);
GLESBINDING_API void glEndTransformFeedback();
GLESBINDING_API void glExtGetBufferPointervQCOM(GLenum target, void ** params);
GLESBINDING_API void glExtGetBuffersQCOM(GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
GLESBINDING_API void glExtGetFramebuffersQCOM(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
GLESBINDING_API void glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar * source, GLint * length);
GLESBINDING_API void glExtGetProgramsQCOM(GLuint * programs, GLint maxPrograms, GLint * numPrograms);
GLESBINDING_API void glExtGetRenderbuffersQCOM(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
GLESBINDING_API void glExtGetShadersQCOM(GLuint * shaders, GLint maxShaders, GLint * numShaders);
GLESBINDING_API void glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
GLESBINDING_API void glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
GLESBINDING_API void glExtGetTexturesQCOM(GLuint * textures, GLint maxTextures, GLint * numTextures);
GLESBINDING_API GLboolean glExtIsProgramBinaryQCOM(GLuint program);
GLESBINDING_API void glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
GLESBINDING_API GLsync glFenceSync(GLenum condition, UnusedMask flags);
GLESBINDING_API GLsync glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
GLESBINDING_API void glFinish();
GLESBINDING_API void glFinishFenceNV(GLuint fence);
GLESBINDING_API void glFlush();
GLESBINDING_API void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
GLESBINDING_API void glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
GLESBINDING_API void glFragmentCoverageColorNV(GLuint color);
GLESBINDING_API void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
GLESBINDING_API void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLESBINDING_API void glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
GLESBINDING_API void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLESBINDING_API void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLESBINDING_API void glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLESBINDING_API void glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLESBINDING_API void glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLESBINDING_API void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLESBINDING_API void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLESBINDING_API void glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
GLESBINDING_API void glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLESBINDING_API void glFrontFace(GLenum mode);
GLESBINDING_API void glGenBuffers(GLsizei n, GLuint * buffers);
GLESBINDING_API void glGenFencesNV(GLsizei n, GLuint * fences);
GLESBINDING_API void glGenFramebuffers(GLsizei n, GLuint * framebuffers);
GLESBINDING_API GLuint glGenPathsNV(GLsizei range);
GLESBINDING_API void glGenPerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLESBINDING_API void glGenProgramPipelines(GLsizei n, GLuint * pipelines);
GLESBINDING_API void glGenProgramPipelinesEXT(GLsizei n, GLuint * pipelines);
GLESBINDING_API void glGenQueries(GLsizei n, GLuint * ids);
GLESBINDING_API void glGenQueriesEXT(GLsizei n, GLuint * ids);
GLESBINDING_API void glGenRenderbuffers(GLsizei n, GLuint * renderbuffers);
GLESBINDING_API void glGenSamplers(GLsizei count, GLuint * samplers);
GLESBINDING_API void glGenTextures(GLsizei n, GLuint * textures);
GLESBINDING_API void glGenTransformFeedbacks(GLsizei n, GLuint * ids);
GLESBINDING_API void glGenVertexArrays(GLsizei n, GLuint * arrays);
GLESBINDING_API void glGenVertexArraysOES(GLsizei n, GLuint * arrays);
GLESBINDING_API void glGenerateMipmap(GLenum target);
GLESBINDING_API void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLESBINDING_API void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLESBINDING_API void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
GLESBINDING_API void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
GLESBINDING_API void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
GLESBINDING_API void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLESBINDING_API GLint glGetAttribLocation(GLuint program, const GLchar * name);
GLESBINDING_API void glGetBooleani_v(GLenum target, GLuint index, GLboolean * data);
GLESBINDING_API void glGetBooleanv(GLenum pname, GLboolean * data);
GLESBINDING_API void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params);
GLESBINDING_API void glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API void glGetBufferPointerv(GLenum target, GLenum pname, void ** params);
GLESBINDING_API void glGetBufferPointervOES(GLenum target, GLenum pname, void ** params);
GLESBINDING_API void glGetCoverageModulationTableNV(GLsizei bufsize, GLfloat * v);
GLESBINDING_API GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLESBINDING_API GLuint glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLESBINDING_API void glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
GLESBINDING_API void glGetDriverControlsQCOM(GLint * num, GLsizei size, GLuint * driverControls);
GLESBINDING_API GLenum glGetError();
GLESBINDING_API void glGetFenceivNV(GLuint fence, GLenum pname, GLint * params);
GLESBINDING_API void glGetFirstPerfQueryIdINTEL(GLuint * queryId);
GLESBINDING_API void glGetFloati_vNV(GLenum target, GLuint index, GLfloat * data);
GLESBINDING_API void glGetFloatv(GLenum pname, GLfloat * data);
GLESBINDING_API GLint glGetFragDataLocation(GLuint program, const GLchar * name);
GLESBINDING_API void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLESBINDING_API void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API GLenum glGetGraphicsResetStatus();
GLESBINDING_API GLenum glGetGraphicsResetStatusEXT();
GLESBINDING_API GLenum glGetGraphicsResetStatusKHR();
GLESBINDING_API GLuint64 glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLESBINDING_API void glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data);
GLESBINDING_API void glGetInteger64v(GLenum pname, GLint64 * data);
GLESBINDING_API void glGetInteger64vAPPLE(GLenum pname, GLint64 * params);
GLESBINDING_API void glGetIntegeri_v(GLenum target, GLuint index, GLint * data);
GLESBINDING_API void glGetIntegeri_vEXT(GLenum target, GLuint index, GLint * data);
GLESBINDING_API void glGetIntegerv(GLenum pname, GLint * data);
GLESBINDING_API void glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params);
GLESBINDING_API void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
GLESBINDING_API void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat * val);
GLESBINDING_API void glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint * nextQueryId);
GLESBINDING_API void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLESBINDING_API void glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
GLESBINDING_API void glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLESBINDING_API void glGetObjectPtrLabel(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLESBINDING_API void glGetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLESBINDING_API void glGetPathCommandsNV(GLuint path, GLubyte * commands);
GLESBINDING_API void glGetPathCoordsNV(GLuint path, GLfloat * coords);
GLESBINDING_API void glGetPathDashArrayNV(GLuint path, GLfloat * dashArray);
GLESBINDING_API GLfloat glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLESBINDING_API void glGetPathMetricRangeNV(PathRenderingMaskNV metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
GLESBINDING_API void glGetPathMetricsNV(PathRenderingMaskNV metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
GLESBINDING_API void glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat * value);
GLESBINDING_API void glGetPathParameterivNV(GLuint path, GLenum pname, GLint * value);
GLESBINDING_API void glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
GLESBINDING_API void glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
GLESBINDING_API void glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
GLESBINDING_API void glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void * data);
GLESBINDING_API void glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
GLESBINDING_API void glGetPerfMonitorCountersAMD(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
GLESBINDING_API void glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
GLESBINDING_API void glGetPerfMonitorGroupsAMD(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
GLESBINDING_API void glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
GLESBINDING_API void glGetPerfQueryIdByNameINTEL(GLchar * queryName, GLuint * queryId);
GLESBINDING_API void glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
GLESBINDING_API void glGetPointerv(GLenum pname, void ** params);
GLESBINDING_API void glGetPointervKHR(GLenum pname, void ** params);
GLESBINDING_API void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLESBINDING_API void glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLESBINDING_API void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLESBINDING_API void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
GLESBINDING_API void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLESBINDING_API void glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLESBINDING_API void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params);
GLESBINDING_API void glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params);
GLESBINDING_API GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLESBINDING_API GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name);
GLESBINDING_API void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLESBINDING_API void glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params);
GLESBINDING_API void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
GLESBINDING_API void glGetProgramiv(GLuint program, GLenum pname, GLint * params);
GLESBINDING_API void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params);
GLESBINDING_API void glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params);
GLESBINDING_API void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params);
GLESBINDING_API void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params);
GLESBINDING_API void glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params);
GLESBINDING_API void glGetQueryiv(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API void glGetQueryivEXT(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params);
GLESBINDING_API void glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint * params);
GLESBINDING_API void glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint * params);
GLESBINDING_API void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params);
GLESBINDING_API void glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint * params);
GLESBINDING_API void glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint * params);
GLESBINDING_API void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params);
GLESBINDING_API void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params);
GLESBINDING_API void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLESBINDING_API void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
GLESBINDING_API void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLESBINDING_API void glGetShaderiv(GLuint shader, GLenum pname, GLint * params);
GLESBINDING_API const GLubyte * glGetString(GLenum name);
GLESBINDING_API const GLubyte * glGetStringi(GLenum name, GLuint index);
GLESBINDING_API void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLESBINDING_API void glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLESBINDING_API void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
GLESBINDING_API void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
GLESBINDING_API void glGetTexParameterIiv(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API void glGetTexParameterIivOES(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params);
GLESBINDING_API void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params);
GLESBINDING_API void glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint * params);
GLESBINDING_API void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLESBINDING_API void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
GLESBINDING_API GLuint64 glGetTextureHandleNV(GLuint texture);
GLESBINDING_API GLuint64 glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
GLESBINDING_API void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLESBINDING_API void glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source);
GLESBINDING_API GLuint glGetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName);
GLESBINDING_API void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
GLESBINDING_API GLint glGetUniformLocation(GLuint program, const GLchar * name);
GLESBINDING_API void glGetUniformfv(GLuint program, GLint location, GLfloat * params);
GLESBINDING_API void glGetUniformiv(GLuint program, GLint location, GLint * params);
GLESBINDING_API void glGetUniformuiv(GLuint program, GLint location, GLuint * params);
GLESBINDING_API void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params);
GLESBINDING_API void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params);
GLESBINDING_API void glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer);
GLESBINDING_API void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
GLESBINDING_API void glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
GLESBINDING_API void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLESBINDING_API void glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLESBINDING_API void glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLESBINDING_API void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLESBINDING_API void glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLESBINDING_API void glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLESBINDING_API void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLESBINDING_API void glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLESBINDING_API void glHint(GLenum target, GLenum mode);
GLESBINDING_API void glInsertEventMarkerEXT(GLsizei length, const GLchar * marker);
GLESBINDING_API void glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLESBINDING_API void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLESBINDING_API void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLESBINDING_API GLboolean glIsBuffer(GLuint buffer);
GLESBINDING_API GLboolean glIsEnabled(GLenum cap);
GLESBINDING_API GLboolean glIsEnabledi(GLenum target, GLuint index);
GLESBINDING_API GLboolean glIsEnablediEXT(GLenum target, GLuint index);
GLESBINDING_API GLboolean glIsEnablediNV(GLenum target, GLuint index);
GLESBINDING_API GLboolean glIsEnablediOES(GLenum target, GLuint index);
GLESBINDING_API GLboolean glIsFenceNV(GLuint fence);
GLESBINDING_API GLboolean glIsFramebuffer(GLuint framebuffer);
GLESBINDING_API GLboolean glIsImageHandleResidentNV(GLuint64 handle);
GLESBINDING_API GLboolean glIsPathNV(GLuint path);
GLESBINDING_API GLboolean glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLESBINDING_API GLboolean glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
GLESBINDING_API GLboolean glIsProgram(GLuint program);
GLESBINDING_API GLboolean glIsProgramPipeline(GLuint pipeline);
GLESBINDING_API GLboolean glIsProgramPipelineEXT(GLuint pipeline);
GLESBINDING_API GLboolean glIsQuery(GLuint id);
GLESBINDING_API GLboolean glIsQueryEXT(GLuint id);
GLESBINDING_API GLboolean glIsRenderbuffer(GLuint renderbuffer);
GLESBINDING_API GLboolean glIsSampler(GLuint sampler);
GLESBINDING_API GLboolean glIsShader(GLuint shader);
GLESBINDING_API GLboolean glIsSync(GLsync sync);
GLESBINDING_API GLboolean glIsSyncAPPLE(GLsync sync);
GLESBINDING_API GLboolean glIsTexture(GLuint texture);
GLESBINDING_API GLboolean glIsTextureHandleResidentNV(GLuint64 handle);
GLESBINDING_API GLboolean glIsTransformFeedback(GLuint id);
GLESBINDING_API GLboolean glIsVertexArray(GLuint array);
GLESBINDING_API GLboolean glIsVertexArrayOES(GLuint array);
GLESBINDING_API void glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar * label);
GLESBINDING_API void glLineWidth(GLfloat width);
GLESBINDING_API void glLinkProgram(GLuint program);
GLESBINDING_API void glMakeImageHandleNonResidentNV(GLuint64 handle);
GLESBINDING_API void glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
GLESBINDING_API void glMakeTextureHandleNonResidentNV(GLuint64 handle);
GLESBINDING_API void glMakeTextureHandleResidentNV(GLuint64 handle);
GLESBINDING_API void * glMapBufferOES(GLenum target, GLenum access);
GLESBINDING_API void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, BufferAccessMask access);
GLESBINDING_API void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLESBINDING_API void glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat * m);
GLESBINDING_API void glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat * m);
GLESBINDING_API void glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLESBINDING_API void glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat * m);
GLESBINDING_API void glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat * m);
GLESBINDING_API void glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLESBINDING_API void glMemoryBarrier(MemoryBarrierMask barriers);
GLESBINDING_API void glMemoryBarrierByRegion(MemoryBarrierMask barriers);
GLESBINDING_API void glMinSampleShading(GLfloat value);
GLESBINDING_API void glMinSampleShadingOES(GLfloat value);
GLESBINDING_API void glMultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLESBINDING_API void glMultiDrawArraysIndirectEXT(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLESBINDING_API void glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLESBINDING_API void glMultiDrawElementsBaseVertexOES(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLESBINDING_API void glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
GLESBINDING_API void glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLESBINDING_API void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLESBINDING_API void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLESBINDING_API void glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLESBINDING_API void glObjectPtrLabel(const void * ptr, GLsizei length, const GLchar * label);
GLESBINDING_API void glObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label);
GLESBINDING_API void glPatchParameteri(GLenum pname, GLint value);
GLESBINDING_API void glPatchParameteriEXT(GLenum pname, GLint value);
GLESBINDING_API void glPatchParameteriOES(GLenum pname, GLint value);
GLESBINDING_API void glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLESBINDING_API void glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
GLESBINDING_API void glPathCoverDepthFuncNV(GLenum func);
GLESBINDING_API void glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
GLESBINDING_API GLenum glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLESBINDING_API GLenum glPathGlyphIndexRangeNV(GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint_array_2 baseAndCount);
GLESBINDING_API void glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLESBINDING_API void glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLESBINDING_API GLenum glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLESBINDING_API void glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
GLESBINDING_API void glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat * value);
GLESBINDING_API void glPathParameteriNV(GLuint path, GLenum pname, GLint value);
GLESBINDING_API void glPathParameterivNV(GLuint path, GLenum pname, const GLint * value);
GLESBINDING_API void glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
GLESBINDING_API void glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
GLESBINDING_API void glPathStringNV(GLuint path, GLenum format, GLsizei length, const void * pathString);
GLESBINDING_API void glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLESBINDING_API void glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
GLESBINDING_API void glPauseTransformFeedback();
GLESBINDING_API void glPixelStorei(GLenum pname, GLint param);
GLESBINDING_API GLboolean glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
GLESBINDING_API void glPolygonModeNV(GLenum face, GLenum mode);
GLESBINDING_API void glPolygonOffset(GLfloat factor, GLfloat units);
GLESBINDING_API void glPopDebugGroup();
GLESBINDING_API void glPopDebugGroupKHR();
GLESBINDING_API void glPopGroupMarkerEXT();
GLESBINDING_API void glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLESBINDING_API void glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLESBINDING_API void glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLESBINDING_API void glProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
GLESBINDING_API void glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
GLESBINDING_API void glProgramParameteri(GLuint program, GLenum pname, GLint value);
GLESBINDING_API void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
GLESBINDING_API void glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
GLESBINDING_API void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
GLESBINDING_API void glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
GLESBINDING_API void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform1i(GLuint program, GLint location, GLint v0);
GLESBINDING_API void glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
GLESBINDING_API void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
GLESBINDING_API void glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
GLESBINDING_API void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLESBINDING_API void glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLESBINDING_API void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
GLESBINDING_API void glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
GLESBINDING_API void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
GLESBINDING_API void glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
GLESBINDING_API void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLESBINDING_API void glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLESBINDING_API void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLESBINDING_API void glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLESBINDING_API void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLESBINDING_API void glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLESBINDING_API void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLESBINDING_API void glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLESBINDING_API void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLESBINDING_API void glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLESBINDING_API void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLESBINDING_API void glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLESBINDING_API void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
GLESBINDING_API void glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLESBINDING_API void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLESBINDING_API void glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLESBINDING_API void glPushGroupMarkerEXT(GLsizei length, const GLchar * marker);
GLESBINDING_API void glQueryCounterEXT(GLuint id, GLenum target);
GLESBINDING_API void glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
GLESBINDING_API void glReadBuffer(GLenum src);
GLESBINDING_API void glReadBufferIndexedEXT(GLenum src, GLint index);
GLESBINDING_API void glReadBufferNV(GLenum mode);
GLESBINDING_API void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLESBINDING_API void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLESBINDING_API void glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLESBINDING_API void glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLESBINDING_API void glReleaseShaderCompiler();
GLESBINDING_API void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glResolveDepthValuesNV();
GLESBINDING_API void glResolveMultisampleFramebufferAPPLE();
GLESBINDING_API void glResumeTransformFeedback();
GLESBINDING_API void glSampleCoverage(GLfloat value, GLboolean invert);
GLESBINDING_API void glSampleMaski(GLuint maskNumber, GLbitfield mask);
GLESBINDING_API void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param);
GLESBINDING_API void glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint * param);
GLESBINDING_API void glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint * param);
GLESBINDING_API void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param);
GLESBINDING_API void glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint * param);
GLESBINDING_API void glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint * param);
GLESBINDING_API void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
GLESBINDING_API void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param);
GLESBINDING_API void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
GLESBINDING_API void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param);
GLESBINDING_API void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
GLESBINDING_API void glScissorArrayvNV(GLuint first, GLsizei count, const GLint * v);
GLESBINDING_API void glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLESBINDING_API void glScissorIndexedvNV(GLuint index, const GLint * v);
GLESBINDING_API void glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
GLESBINDING_API void glSetFenceNV(GLuint fence, GLenum condition);
GLESBINDING_API void glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
GLESBINDING_API void glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
GLESBINDING_API void glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
GLESBINDING_API void glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLESBINDING_API void glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
GLESBINDING_API void glStencilFunc(GLenum func, GLint ref, GLuint mask);
GLESBINDING_API void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
GLESBINDING_API void glStencilMask(GLuint mask);
GLESBINDING_API void glStencilMaskSeparate(GLenum face, GLuint mask);
GLESBINDING_API void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
GLESBINDING_API void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLESBINDING_API void glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLESBINDING_API void glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
GLESBINDING_API void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLESBINDING_API void glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLESBINDING_API void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLESBINDING_API void glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
GLESBINDING_API void glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
GLESBINDING_API GLboolean glTestFenceNV(GLuint fence);
GLESBINDING_API void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
GLESBINDING_API void glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
GLESBINDING_API void glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
GLESBINDING_API void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLESBINDING_API void glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLESBINDING_API void glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLESBINDING_API void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLESBINDING_API void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLESBINDING_API void glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLESBINDING_API void glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLESBINDING_API void glTexParameterIiv(GLenum target, GLenum pname, const GLint * params);
GLESBINDING_API void glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params);
GLESBINDING_API void glTexParameterIivOES(GLenum target, GLenum pname, const GLint * params);
GLESBINDING_API void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint * params);
GLESBINDING_API void glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params);
GLESBINDING_API void glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint * params);
GLESBINDING_API void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
GLESBINDING_API void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLESBINDING_API void glTexParameteri(GLenum target, GLenum pname, GLint param);
GLESBINDING_API void glTexParameteriv(GLenum target, GLenum pname, const GLint * params);
GLESBINDING_API void glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLESBINDING_API void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLESBINDING_API void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLESBINDING_API void glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLESBINDING_API void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLESBINDING_API void glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLESBINDING_API void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLESBINDING_API void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLESBINDING_API void glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLESBINDING_API void glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLESBINDING_API void glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLESBINDING_API void glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLESBINDING_API void glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLESBINDING_API void glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLESBINDING_API void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLESBINDING_API void glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
GLESBINDING_API void glUniform1f(GLint location, GLfloat v0);
GLESBINDING_API void glUniform1fv(GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glUniform1i(GLint location, GLint v0);
GLESBINDING_API void glUniform1iv(GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glUniform1ui(GLint location, GLuint v0);
GLESBINDING_API void glUniform1uiv(GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
GLESBINDING_API void glUniform2fv(GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glUniform2i(GLint location, GLint v0, GLint v1);
GLESBINDING_API void glUniform2iv(GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glUniform2ui(GLint location, GLuint v0, GLuint v1);
GLESBINDING_API void glUniform2uiv(GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLESBINDING_API void glUniform3fv(GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
GLESBINDING_API void glUniform3iv(GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLESBINDING_API void glUniform3uiv(GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLESBINDING_API void glUniform4fv(GLint location, GLsizei count, const GLfloat * value);
GLESBINDING_API void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLESBINDING_API void glUniform4iv(GLint location, GLsizei count, const GLint * value);
GLESBINDING_API void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLESBINDING_API void glUniform4uiv(GLint location, GLsizei count, const GLuint * value);
GLESBINDING_API void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
GLESBINDING_API void glUniformHandleui64NV(GLint location, GLuint64 value);
GLESBINDING_API void glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 * value);
GLESBINDING_API void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API void glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLESBINDING_API GLboolean glUnmapBuffer(GLenum target);
GLESBINDING_API GLboolean glUnmapBufferOES(GLenum target);
GLESBINDING_API void glUseProgram(GLuint program);
GLESBINDING_API void glUseProgramStages(GLuint pipeline, UseProgramStageMask stages, GLuint program);
GLESBINDING_API void glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
GLESBINDING_API void glValidateProgram(GLuint program);
GLESBINDING_API void glValidateProgramPipeline(GLuint pipeline);
GLESBINDING_API void glValidateProgramPipelineEXT(GLuint pipeline);
GLESBINDING_API void glVertexAttrib1f(GLuint index, GLfloat x);
GLESBINDING_API void glVertexAttrib1fv(GLuint index, const GLfloat * v);
GLESBINDING_API void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
GLESBINDING_API void glVertexAttrib2fv(GLuint index, const GLfloat * v);
GLESBINDING_API void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLESBINDING_API void glVertexAttrib3fv(GLuint index, const GLfloat * v);
GLESBINDING_API void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLESBINDING_API void glVertexAttrib4fv(GLuint index, const GLfloat * v);
GLESBINDING_API void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
GLESBINDING_API void glVertexAttribDivisor(GLuint index, GLuint divisor);
GLESBINDING_API void glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
GLESBINDING_API void glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
GLESBINDING_API void glVertexAttribDivisorNV(GLuint index, GLuint divisor);
GLESBINDING_API void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLESBINDING_API void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLESBINDING_API void glVertexAttribI4iv(GLuint index, const GLint * v);
GLESBINDING_API void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLESBINDING_API void glVertexAttribI4uiv(GLuint index, const GLuint * v);
GLESBINDING_API void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLESBINDING_API void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLESBINDING_API void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLESBINDING_API void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
GLESBINDING_API void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
GLESBINDING_API void glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat * v);
GLESBINDING_API void glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLESBINDING_API void glViewportIndexedfvNV(GLuint index, const GLfloat * v);
GLESBINDING_API void glWaitSync(GLsync sync, UnusedMask flags, GLuint64 timeout);
GLESBINDING_API void glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLESBINDING_API void glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);

} // namespace gles
